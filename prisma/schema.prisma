// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email        String            @unique
  name         String
  isAdmin      Boolean           @default(false)
  password     String?
  salt         String?
  googleId     String?           @unique @map("google_id")
  provider     String?
  songs        Song[]
  playlists    Playlist[]
  refreshToken UserRefreshToken?

  @@map("user")
}

model Song {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user      User       @relation(fields: [userId], references: [id])
  userId    String     @map("user_id")
  playlists Playlist[] @relation("PlaylistSongs")

  name   String
  author String
  text   String
  chords Json
  shared Boolean

  @@map("song")
}

model UserRefreshToken {
  id           String @id @default(uuid())
  user         User   @relation(fields: [userId], references: [id])
  userId       String @unique @map("user_id")
  refreshToken String @map("refresh_token")

  @@map("user_refresh_token")
}

model Playlist {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name      String
  isDefault Boolean @default(false) @map("is_default")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")
  songs  Song[] @relation("PlaylistSongs")

  @@map("playlist")
}
